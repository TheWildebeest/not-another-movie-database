{"version":3,"sources":["components/NavBar/NavBar.module.scss","components/Card/Card.module.scss","components/Homepage/Homepage.module.scss","components/MoviesByTitle/MoviesByTitle.module.scss","containers/CardList/CardList.module.scss","components/SearchBox/SearchBox.module.scss","components/MoviesByYear/MoviesByYear.module.scss","components/Card/index.js","components/Card/Card.jsx","containers/CardList/index.js","containers/CardList/CardList.jsx","components/SearchBox/index.js","components/SearchBox/SearchBox.jsx","components/MoviesByTitle/index.js","components/MoviesByTitle/MoviesByTitle.jsx","components/MoviesByYear/index.js","components/MoviesByYear/MoviesByYear.jsx","components/Homepage/index.js","components/Homepage/Homepage.jsx","components/NavBar/index.js","components/NavBar/NavBar.jsx","containers/Pages/index.js","containers/Pages/Pages.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Card","movie","this","props","className","styles","card","moviePoster","style","Poster","split","backgroundImage","movieYear","Year","titleWrapper","movieTitle","Title","Component","CardList","getCardJsx","index","key","movies","cardList","map","SearchBox","inputHandler","placeholder","searchBox","type","onChange","autoFocus","MoviesByTitle","getMovies","main","e","target","value","MoviesByYear","getYear","moviesByYear","Homepage","mainTitle","special","NavBar","state","navIsShowing","toggleNav","setState","toggleIcon","setSearchType","navBar","displayNav","navWrapper","navToggler","navBurger","onClick","navOptions","navOpen","searchOption","to","Pages","default","path","App","wildcard","searchTerm","year","filteredMovies","filter","includes","fetch","then","response","json","data","Search","catch","error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.4ef1a622.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__2FDt2\",\"displayNav\":\"NavBar_displayNav__3RLNJ\",\"navWrapper\":\"NavBar_navWrapper__3t8WG\",\"navToggler\":\"NavBar_navToggler__2xsdt\",\"navBurger\":\"NavBar_navBurger__v9VBU\",\"navOptions\":\"NavBar_navOptions__3Tj9B\",\"searchOption\":\"NavBar_searchOption__2Kvp3\",\"navOpen\":\"NavBar_navOpen__3dlLB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1OiVA\",\"moviePoster\":\"Card_moviePoster__3Q1lM\",\"movieYear\":\"Card_movieYear__1ztu3\",\"titleWrapper\":\"Card_titleWrapper__3pOtW\",\"movieTitle\":\"Card_movieTitle__14IJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Homepage_main__2aTV7\",\"mainTitle\":\"Homepage_mainTitle__1UBbn\",\"special\":\"Homepage_special__1dRIB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MoviesByTitle_main__3G3HW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardList\":\"CardList_cardList__gNSpj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"SearchBox_searchBox__fzS6I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MoviesByYear_main__veVYM\",\"searchContainer\":\"MoviesByYear_searchContainer__3VVoK\"};","import Card from \"./Card\";\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport styles from \"./Card.module.scss\";\n\nclass Card extends Component {\n  render() {\n    const { movie } = this.props\n    return (\n      <article className={styles.card}>\n        <div className={styles.moviePoster} style={movie.Poster.split(\"\")[0] === \"h\" ? { backgroundImage: `url(\"${movie.Poster}\")` } : { backgroundImage: `url(\"https://picsum.photos/220/336\")` }}>\n          <h5 className={styles.movieYear}>\n            {movie.Year}\n          </h5>\n        </div>\n        <header className={styles.titleWrapper}>\n          <h4 className={styles.movieTitle}>{movie.Title}</h4>\n        </header>\n        <main >\n\n        </main>\n      </article >\n    );\n  }\n}\n\nexport default Card;\n","import CardList from \"./CardList\";\n\nexport default CardList;\n","import React, { Component } from \"react\";\nimport styles from \"./CardList.module.scss\";\nimport Card from '../../components/Card';\n\nclass CardList extends Component {\n  getCardJsx = (movie, index) => (\n    <Card key={index} movie={movie} />\n  );\n\n  render() {\n    const { movies } = this.props;\n    return (\n      <section className={styles.cardList}>{\n        movies ? movies.map((movie, index) => this.getCardJsx(movie, index)) : null}</section>\n    );\n  }\n}\n\nexport default CardList;\n","import SearchBox from \"./SearchBox\";\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport styles from \"./SearchBox.module.scss\";\n\nclass SearchBox extends Component {\n  render() {\n    const { inputHandler, placeholder } = this.props;\n    return (\n      <>\n        <input className={styles.searchBox}\n          type=\"text\"\n          placeholder={placeholder}\n          onChange={inputHandler}\n          autoFocus={false}\n        />\n      </>\n    );\n  }\n}\n\nexport default SearchBox;\n","import MoviesByTitle from \"./MoviesByTitle\";\n\nexport default MoviesByTitle;\n","import React, { Component } from \"react\";\nimport styles from \"./MoviesByTitle.module.scss\";\nimport CardList from '../../containers/CardList';\nimport SearchBox from '../SearchBox'\n\nclass MoviesByTitle extends Component {\n  render() {\n    const { movies, getMovies } = this.props;\n    return (\n      <>\n        <main className={styles.main}>\n          <SearchBox inputHandler={(e) => getMovies(e.target.value)} placeholder={\"e.g. 'Singin' in the rain'\"} />\n          <CardList movies={movies} />\n        </main>\n      </>\n    );\n  }\n}\n\nexport default MoviesByTitle;\n","import MoviesByYear from \"./MoviesByYear\";\nexport default MoviesByYear;\n","import React, { Component } from \"react\";\nimport styles from \"./MoviesByYear.module.scss\";\nimport CardList from '../../containers/CardList';\nimport SearchBox from '../SearchBox'\n\nclass MoviesByYear extends Component {\n\n  componentDidMount() {\n    this.props.getYear(\"\");\n  }\n\n  render() {\n    const { moviesByYear, getYear } = this.props;\n    return (\n      <>\n        <main className={styles.main}>\n          <SearchBox inputHandler={(e) => getYear(e.target.value)} placeholder={\"e.g. '1942'\"} />\n          <CardList movies={moviesByYear} />\n        </main>\n      </>\n    );\n  }\n}\n\nexport default MoviesByYear;\n","import Homepage from \"./Homepage\";\n\nexport default Homepage;\n","import React, { Component } from \"react\";\nimport styles from \"./Homepage.module.scss\";\n\nclass Homepage extends Component {\n  render() {\n    return (\n      <main className={styles.main}>\n        <h1 className={styles.mainTitle}>Oh dear, NOT<br />ANOTHER<br />movie<br />DAT<span className={styles.special}>A</span>BASE<span className={styles.special}>!</span></h1>\n      </main>\n    );\n  }\n}\n\nexport default Homepage;\n","import NavBar from \"./NavBar\";\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { Link } from '@reach/router';\nimport styles from \"./NavBar.module.scss\";\n\nclass NavBar extends Component {\n\n  state = {\n    navIsShowing: true\n  }\n\n  toggleNav = () => {\n    this.setState({\n      navIsShowing: !this.state.navIsShowing,\n    })\n  }\n\n\n  toggleIcon = () => {\n    return this.state.navIsShowing ? \"✖\" : \"☰\";\n  }\n\n  render() {\n    const { setSearchType } = this.props\n    return (\n      <>\n        <header>\n          <nav className={styles.navBar + \" \" + (this.state.navIsShowing ? styles.displayNav : \"\")}>\n            <ul className={styles.navWrapper}>\n              <li className={styles.navToggler}>\n                <div className={styles.navBurger} onClick={this.toggleNav}>\n                  <h3>{this.toggleIcon()}</h3>\n                </div>\n              </li>\n              <ul className={styles.navOptions + \" \" + (this.state.navIsShowing ? styles.navOpen : \"\")}>\n                <li>\n                  <div className={styles.searchOption}>\n                    <Link to=\"search-movies\" onClick={setSearchType}><h3>Search by<br />movie title</h3></Link>\n                  </div>\n                </li>\n                <li>\n                  <div className={styles.searchOption}>\n                    <Link to=\"search-by-year\"><h3>Filter by<br />year of release</h3></Link>\n                  </div>\n                </li>\n              </ul>\n            </ul>\n          </nav>\n        </header>\n      </>\n    );\n  }\n};\n\nexport default NavBar;\n","import Pages from \"./Pages\";\n\nexport default Pages;\n","import React, { Component } from \"react\";\nimport { Router } from '@reach/router'\nimport MoviesByTitle from '../../components/MoviesByTitle';\nimport MoviesByYear from '../../components/MoviesByYear';\nimport Homepage from '../../components/Homepage';\nimport NavBar from '../../components/NavBar';\n\nclass Pages extends Component {\n  render() {\n    const { movies, moviesByYear, getMovies, getYear } = this.props;\n    return (\n      <>\n        <NavBar />\n        <Router>\n          <Homepage default />\n          <MoviesByTitle path=\"search-movies\" movies={movies} getMovies={getMovies} />\n          <MoviesByYear path=\"search-by-year\" movies={movies} moviesByYear={moviesByYear} getMovies={getMovies} getYear={getYear} />\n        </Router>\n      </>\n    );\n  }\n};\n\nexport default Pages;\n","import React, { Component } from 'react';\nimport Pages from './containers/Pages';\nimport './App.css';\n\nclass App extends Component {\n\n  state = {\n    movies: [],\n    moviesByYear: [],\n    wildcard: \"\",\n    searchTerm: \"\"\n  }\n\n  getYear = (year) => {\n    const { movies } = this.state;\n    let filteredMovies = movies.filter(movie => movie.Year.includes(year));\n    if (movies && filteredMovies) {\n      this.setState({\n        moviesByYear: filteredMovies\n      })\n    } else {\n      this.setState({ moviesByYear: movies });\n    }\n  }\n\n  getMovies = (searchTerm) => {\n    fetch(`https://www.omdbapi.com/?s=${searchTerm}*&apikey=4f7fe0c3`)\n      .then(response => response.json())\n      .then(data => this.setState({ movies: data.Search }))\n      .catch(error => this.setState({ movies: error }));\n    this.setState({ searchTerm: searchTerm });\n  }\n\n\n  render() {\n    const { movies, moviesByYear } = this.state;\n    return (\n      <Pages movies={movies} moviesByYear={moviesByYear} getMovies={this.getMovies} getYear={this.getYear} />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}